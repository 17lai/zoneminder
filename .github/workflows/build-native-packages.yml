name: build-native-packages-signed

on:
  push:
    tags: ["v*"]
  workflow_dispatch:
permissions:
  contents: write
env:
  GPG_KEY_ID: ${{ secrets.ZMREPO_GPG_KEY_ID }}
  GPG_PASSPHRASE: ${{ secrets.ZMREPO_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_B64: ${{ secrets.ZMREPO_GPG_PRIVATE_KEY_B64 }}

jobs:
  build-debian:
    name: Build & sign .deb (${{ matrix.distro }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro: ["debian:13", "debian:12", "ubuntu:22.04", "ubuntu:24.04"]
    container:
      image: ${{ matrix.distro }}

    steps:
      - name: Prep apt
        run: |
          set -eux
          if grep -q '^deb http' /etc/apt/sources.list && ! grep -q '^deb-src'\
            /etc/apt/sources.list; then
            sed -n 's/^deb /deb-src /p' /etc/apt/sources.list >> \
              /etc/apt/sources.list
          fi
          apt-get update
      - name: Install build tools
        run: |
          set -eux
          apt install -y --no-install-recommends \
            git ca-certificates gnupg lsb-release tzdata \
            build-essential devscripts debhelper equivs fakeroot \
            cmake pkg-config ccache
          apt install -y debhelper sphinx-doc dh-linktree dh-apache2 cmake \
            libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \
            libswresample-dev libswscale-dev libbz2-dev libjpeg-turbo8-dev \
            libturbojpeg0-dev default-libmysqlclient-dev \
            libpolkit-gobject-1-dev libv4l-dev libvlc-dev libssl-dev \
            libvncserver-dev libjwt-gnutls-dev libgsoap-dev gsoap \
            libmosquittopp-dev

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Import GPG key (Debian)
        run: |
          set -eux
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "$GPG_PRIVATE_KEY_B64" | base64 -d > /tmp/priv.asc
          gpg --batch --import /tmp/priv.asc
          gpg --batch --yes --edit-key "$GPG_KEY_ID" trust quit <<< "5\ny"
          gpg --batch --armor --export "$GPG_KEY_ID" > public.asc
          chmod 600 ~/.gnupg/*
          export GPG_TTY=$(tty || true)
      - name: Install build-deps from debian/control
        run: |
          set -eux
          mk-build-deps -ir -t "apt-get -y --no-install-recommends" \
            debian/control
      - name: Build (signed)
        env:
          DEB_BUILD_OPTIONS: "parallel=$(nproc)"
          # gpg picks passphrase from environment via loopback
        run: |
          set -eux
          # Tell gpg to use loopback + passphrase
          export GPG_TTY=$(tty || true)
          export DEB_SIGN_KEYID="$GPG_KEY_ID"
          dpkg-buildpackage -k"$DEB_SIGN_KEYID" -b
      - name: Collect .deb artifacts (incl. signed metadata & public key)
        run: |
          set -eux
          mkdir -p artifacts/deb
          shopt -s nullglob
          mv ../*.deb ../*.buildinfo ../*.changes artifacts/deb/ || true
          cp -v public.asc artifacts/deb/
          # quick verify signatures (non-fatal)
          gpg --verify artifacts/deb/*.changes || true
          gpg --verify artifacts/deb/*.buildinfo || true
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-${{ matrix.distro }}
          path: artifacts/deb
      - name: Publish to ZMREPO
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ZMREPO_SSH_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: artifacts/deb/
          REMOTE_HOST: ${{ secrets.ZMREPO_HOST }}
          REMOTE_USER: ${{ secrets.ZMREPO_SSH_USER }}
          TARGET: debian/master/mini-dinstall/incoming/

  release:
    name: Create GitHub Release (on tag)
    needs: build-debian
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
